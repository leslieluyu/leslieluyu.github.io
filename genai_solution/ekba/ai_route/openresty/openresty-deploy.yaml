apiVersion: apps/v1
kind: Deployment
metadata:
  name: openresty-deployment
  labels:
    app: openresty
spec:
  replicas: 1 # Adjust as needed
  selector:
    matchLabels:
      app: openresty
  template:
    metadata:
      labels:
        app: openresty
    spec:
      volumes:
      - name: lua-scripts
        hostPath:
          path: /mnt/openresty/lua/route.lua
          type: File
      - name: nginx-conf
        hostPath:
          path: /mnt/openresty/conf
          type: Directory
      - name: log-path
        hostPath:
          path: /mnt/openresty/logs
          type: DirectoryOrCreate
      containers:
      - name: openresty
        # image: openresty/openresty:alpine-fat # Or your preferred OpenResty image
        image: openresty/openresty:jammy
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: nginx-conf
          mountPath: /usr/local/openresty/nginx/conf
        - name: lua-scripts
          mountPath: /usr/local/openresty/lualib/route.lua
        - mountPath: /var/log/openresty
          name: log-path
        
      # volumes:
      # - name: nginx-config
      #   configMap:
      #     name: nginx-config # Refers to the ConfigMap containing nginx.conf
---
apiVersion: v1
kind: Service
metadata:
  name: openresty-service
spec:
  selector:
    app: openresty
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
    nodePort: 31889
    name: http
  type: NodePort # Or ClusterIP, NodePort, etc., depending on your needs.
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    worker_processes  auto;

    events {
        worker_connections 1024;
    }

    http {
        server {
            listen 80;

            location / {
                return 200 'Hello, OpenResty!';
            }
        }
    }